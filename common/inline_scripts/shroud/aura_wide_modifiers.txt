# Eater of Worlds - Digest accord
rival_fleet_modifier = {
	potential = {
		NOT = { is_scope_type = no_scope } # Shroud view has no scope
		from = { has_country_flag = digest_accord_active }
		controller = { is_at_war_with = root.from }
	}
	modifier = {
		ship_hull_mult = @accord_digest_ship_malus
		ship_armor_mult = @accord_digest_ship_malus
	}
}

owner_planet_modifier = {
	potential = {
		from = { has_country_flag = animator_of_clay_accord }
	}
	modifier = {
		planet_pop_assembly_mult = @animator_of_clay_accord
		bonus_pop_growth_mult = @animator_of_clay_accord
	}
}

owner_fleet_modifier = {
	potential = {
		from = { has_country_flag = outsider_accord }
	}
	modifier = {
		ship_shield_mult = @outsider_accord
	}
}

owner_planet_modifier = {
	potential = {
		from = { has_country_flag = endless_sands_accord }
	}
	modifier = {
		planet_building_build_speed_mult = @endless_sands_accord
	}
}

owner_planet_modifier = {
	potential = {
		from = { has_country_flag = pale_mountain_accord }
	}
	modifier = {
		logistic_growth_mult = @pale_mountain_accord
	}
}

owner_planet_modifier = {
	potential = {
		from = {
			has_country_flag = golden_dream_accord
			is_gestalt = no
		}
	}
	modifier = {
		planet_amenities_mult = @golden_dream_accord
	}
}
owner_planet_modifier = {
	potential = {
		from = {
			has_country_flag = golden_dream_accord
			is_gestalt = yes
		}
	}
	modifier = {
		planet_amenities_no_happiness_mult = @golden_dream_accord
	}
}

owner_planet_modifier = {
	potential = {
		from = {
			has_country_flag = bladeless_sword_accord
			is_gestalt = no
		}
	}
	modifier = {
		pop_happiness = @bladeless_sword_accord
	}
}
owner_planet_modifier = {
	potential = {
		from = {
			has_country_flag = bladeless_sword_accord
			is_gestalt = yes
		}
	}
	modifier = {
		planet_stability_mult = @bladeless_sword_accord
	}
}

owner_planet_modifier = {
	potential = {
		from = {
			has_country_flag = throne_shadow_accord
			is_gestalt = no
		}
	}
	modifier = {
		planet_jobs_worker_produces_mult = @throne_shadow_accord
		planet_jobs_slave_produces_mult = @throne_shadow_accord
	}
}
owner_planet_modifier = {
	potential = {
		from = {
			has_country_flag = throne_shadow_accord
			is_gestalt = yes
		}
	}
	modifier = {
		planet_jobs_simple_drone_produces_mult = @throne_shadow_accord
	}
}

owner_fleet_modifier = {
	potential = {
		from = { has_country_flag = black_river_accord }
	}
	modifier = {
		ship_speed_mult = @black_river_accord
	}
}

# Shroud Destabilizer
rival_fleet_modifier = {
	potential = {
		from = {
			check_variable_arithmetic = {
				which = modifier:bts_shroud_destabilizer_intensity_add
				value > 0
			}
		}
	}
	ship_evasion_mult = @bts_shroud_destabilizer_evasion_mult
	ship_accuracy_mult = @bts_shroud_destabilizer_accuracy_mult
	ship_tracking_mult = @bts_shroud_destabilizer_tracking_mult
	ship_speed_reduction = @bts_shroud_destabilizer_speed_reduction
	ship_fire_rate_mult = @bts_shroud_destabilizer_fire_rate_mult
	mult = from.modifier:bts_shroud_destabilizer_intensity_add
}

