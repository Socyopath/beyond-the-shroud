bts_mega_aetherophasic_collapser_0 = {
	entity = "quantum_catapult_stage_1_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
    build_time = @bts_mega_aetherophasic_collapser_0_build_time
    resources = {
        category = megastructures
        cost = {
            astral_threads = @bts_mega_aetherophasic_collapser_0_cost
        }
        produces = {
			sr_zro = @bts_mega_aetherophasic_collapser_0_zro
		}
    }

	country_modifier = {
		
	}

	potential = { 
        has_country_flag = bts_can_build_aetherophasic_collapser
        bts_has_any_covenant_confirmed = yes
        NOT = { 
            any_owned_megastructure = {
                bts_is_aetherophasic_collapser = yes
            }
        }
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_black_hole_neutron_star_pulsar"
			NOT = {
				is_star_class = sc_black_hole
				is_star_class = sc_neutron_star
				is_star_class = sc_pulsar
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_binary_trinary"
			NOR = {
				is_star_class = sc_binary_1
				is_star_class = sc_binary_2
				is_star_class = sc_binary_3
				is_star_class = sc_binary_4
				is_star_class = sc_binary_5
				is_star_class = sc_binary_6
				is_star_class = sc_binary_7
				is_star_class = sc_binary_8
				is_star_class = sc_binary_9
				is_star_class = sc_binary_10
				is_star_class = sc_trinary_1
				is_star_class = sc_trinary_2
				is_star_class = sc_trinary_3
				is_star_class = sc_trinary_4
			}
		} 
        custom_tooltip = {
            fail_text = bts_mega_aetherophasic_collapser_0_missing_favor
            from = {
                bts_has_any_covenant_favor = { FAVOR_AMOUNT = @bts_mega_aetherophasic_collapser_0_favor_cost }
            }
        }
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
		}
	}
}

bts_mega_aetherophasic_collapser_1 = {
	entity = "quantum_catapult_stage_1_entity"
	construction_entity = "quantum_catapult_stage_1_entity"
	portrait = "GFX_megastructure_aetherophasic_collapser"
    build_time = @bts_mega_aetherophasic_collapser_1_build_time
    resources = {
        category = megastructures
        cost = {
            astral_threads = @bts_mega_aetherophasic_collapser_1_cost
        }
        produces = {
			sr_zro = @bts_mega_aetherophasic_collapser_1_zro
		}
    }

	country_modifier = {
	}

    upgrade_from = {
		bts_mega_aetherophasic_collapser_0
	}

    possible = {
        custom_tooltip = {
            fail_text = bts_mega_aetherophasic_collapser_1_missing_favor
            from = {
                bts_has_any_covenant_favor = { FAVOR_AMOUNT = @bts_mega_aetherophasic_collapser_1_favor_cost }
            }
        }
    }

	on_build_complete = {
        set_star_class = sc_black_hole
        star = {
            change_pc = pc_black_hole
            create_ambient_object = {
                type = "star_explosion"
                play_animation_once = yes
                location = this
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 0
                    angle = random
                }
            }
        }
	}

}

bts_mega_aetherophasic_collapser_2 = {
	entity = "quantum_catapult_stage_1_entity"
	construction_entity = "quantum_catapult_stage_1_entity"
	portrait = "GFX_megastructure_aetherophasic_collapser"
    build_time = @bts_mega_aetherophasic_collapser_2_build_time
    resources = {
        category = megastructures
        cost = {
            astral_threads = @bts_mega_aetherophasic_collapser_2_cost
        }
        produces = {
			sr_zro = @bts_mega_aetherophasic_collapser_2_zro 
		}
    }

	country_modifier = {
        country_resource_max_astral_threads_add = @bts_mega_aetherophasic_collapser_2_astral_thread_storage
	}

    upgrade_from = {
		bts_mega_aetherophasic_collapser_1
	}

    possible = {
        custom_tooltip = {
            fail_text = bts_mega_aetherophasic_collapser_2_missing_favor
            from = {
                bts_has_any_covenant_favor = { FAVOR_AMOUNT = @bts_mega_aetherophasic_collapser_2_favor_cost }
            }
        }
    }

    on_build_complete = {
        star = {
            create_ambient_object = {
                type = "bts_shroud_portal_1"
                location = this
            }
            last_created_ambient_object = {
                set_ambient_object_flag = bts_shroud_portal_1_system_effect
                set_location = {
                    target = prev
                    distance = 0
                    angle = random
                }
            }
        }
    }
}

bts_mega_aetherophasic_collapser_3 = {
	entity = "quantum_catapult_stage_2_entity"
	construction_entity = "quantum_catapult_stage_2_entity"
	portrait = "GFX_megastructure_aetherophasic_collapser"
    build_time = @bts_mega_aetherophasic_collapser_3_build_time
    resources = {
        category = megastructures
        cost = {
            astral_threads = @bts_mega_aetherophasic_collapser_3_cost
        }
        produces = {
			sr_zro = @bts_mega_aetherophasic_collapser_3_zro 
		}
    }

	country_modifier = {
        country_resource_max_astral_threads_add = @bts_mega_aetherophasic_collapser_3_astral_thread_storage
	}

    upgrade_from = {
		bts_mega_aetherophasic_collapser_2
	}

    possible = {
        custom_tooltip = {
            fail_text = bts_mega_aetherophasic_collapser_3_missing_favor
            from = {
                bts_has_any_covenant_favor = { FAVOR_AMOUNT = @bts_mega_aetherophasic_collapser_3_favor_cost }
            }
        }
    }

    on_build_complete = {
        every_system_ambient_object = {
            limit = { has_ambient_object_flag = bts_shroud_portal_1_system_effect }
            destroy_ambient_object = this
        }
        star = {
            create_ambient_object = {
                type = "bts_shroud_portal_2"
                location = this
            }
            last_created_ambient_object = {
                set_ambient_object_flag = bts_shroud_portal_2_system_effect
                set_location = {
                    target = prev
                    distance = 0
                    angle = random
                }
            }
        }
    }
}

bts_mega_aetherophasic_collapser_4 = {
	entity = "quantum_catapult_stage_3_entity"
	construction_entity = "quantum_catapult_stage_3_entity"
	portrait = "GFX_megastructure_aetherophasic_collapser"
    build_time = @bts_mega_aetherophasic_collapser_4_build_time
    resources = {
        category = megastructures
        cost = {
            astral_threads = @bts_mega_aetherophasic_collapser_4_cost
        }
        produces = {
			sr_zro = @bts_mega_aetherophasic_collapser_4_zro 
		}
    }

	country_modifier = {
        country_resource_max_astral_threads_add = @bts_mega_aetherophasic_collapser_4_astral_thread_storage
	}

    upgrade_from = {
		bts_mega_aetherophasic_collapser_3
	}

    possible = {
        custom_tooltip = {
            fail_text = bts_mega_aetherophasic_collapser_4_missing_favor
            from = {
                bts_has_any_covenant_favor = { FAVOR_AMOUNT = @bts_mega_aetherophasic_collapser_4_favor_cost }
            }
        }
    }

    on_build_complete = {
        every_system_ambient_object = {
            limit = { has_ambient_object_flag = bts_shroud_portal_2_system_effect }
            destroy_ambient_object = this
        }
        star = {
            create_ambient_object = {
                type = "bts_shroud_portal_3"
                location = this
            }
            last_created_ambient_object = {
                set_ambient_object_flag = bts_shroud_portal_3_system_effect
                set_location = {
                    target = prev
                    distance = 0
                    angle = random
                }
            }
        }
    }
}

bts_mega_aetherophasic_collapser_5 = {
	entity = "bts_mega_aetherophasic_collapser_entity"
	construction_entity = "quantum_catapult_stage_3_entity"
	portrait = "GFX_megastructure_aetherophasic_collapser"
    build_time = @bts_mega_aetherophasic_collapser_5_build_time
    resources = {
        category = megastructures
        cost = {
            astral_threads = @bts_mega_aetherophasic_collapser_5_cost
        }
        produces = {
			sr_zro = @bts_mega_aetherophasic_collapser_5_zro 
		}
    }

	country_modifier = {
        country_resource_max_astral_threads_add = @bts_mega_aetherophasic_collapser_5_astral_thread_storage
	}

    upgrade_from = {
		bts_mega_aetherophasic_collapser_4
	}

    possible = {
        custom_tooltip = {
            fail_text = bts_mega_aetherophasic_collapser_5_missing_favor
            from = {
                bts_has_any_covenant_favor = { FAVOR_AMOUNT = @bts_mega_aetherophasic_collapser_5_favor_cost }
            }
        }
    }

    on_build_complete = {
        every_system_ambient_object = {
            limit = { has_ambient_object_flag = bts_shroud_portal_3_system_effect }
            destroy_ambient_object = this
        }
        set_star_class = sc_rift_star
        star = {
            change_pc = pc_bts_shroud_rift
            create_ambient_object = {
                type = "bts_psionic_wave"
                play_animation_once = yes
                location = this
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 0
                    angle = random
                }
            }
            create_ambient_object = {
                type = "psi_storm_1"
                location = this
            }
            last_created_ambient_object = {
                set_location = {
                    target = prev
                    distance = 0
                    angle = random
                }
            }
        }
    }

}