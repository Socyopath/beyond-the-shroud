bts_labyrinth_of_abstraction_megastructure = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	build_time = @bts_labyrinth_of_abstraction_megastructure_time

	resources = {
		category = megastructures
		cost = {
			alloys = @bts_labyrinth_of_abstraction_megastructure_cost_alloys
			energy = @bts_labyrinth_of_abstraction_megastructure_cost_energy
		}
	}

    potential = {
        has_country_flag = bts_labyrinth_of_abstraction_unlocked
        NOT = {
            any_planet_within_border = {
                is_planet_class = pc_bts_labyrinth_of_abstraction
            }
        }
    }

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = from
						status = no
					}
				}
			}
		}
    }
	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {
					who = from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				has_anomaly = no
			}
			custom_tooltip = {
				fail_text = "requires_no_orbital_station"
				has_orbital_station = no
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		spawn_planet = {
			class = "pc_bts_labyrinth_of_abstraction"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 10
			has_ring = no
			init_effect = {
                set_name = {
                    key = pc_bts_labyrinth_of_abstraction_full
                }
				set_surveyed = {
					surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
                clear_deposits = yes
                prevent_anomaly = yes

                set_planet_flag = megastructure

				fromfrom.planet = {
					set_planet_flag = has_megastructure
					if = {
						limit = { has_orbital_station = yes }
						orbital_station = {
							dismantle = yes
						}
					}
				}

                set_owner = fromfrom
                set_controller = fromfrom
                create_pop = {
					species = owner_main_species
				}
                from = {
					room_name_override = ""
				}
       
                add_building = bts_labyrinth_of_abstraction_core_1
                
                owner = {
                    if = {
                        limit = {
                            NOT = {
                                any_situation = { is_situation_type = situation_bts_conceptual_mastery }
                            }
                        }
                        country_event = {
                            id = bts.20
                            days = @bts_days_before_conceptual_mastery
                            scopes = {
                                from = prev
                            }
                        }
                    }
			    }
		    }
        }
		remove_megastructure = fromfrom
	}
}


bts_shroud_portal_megastructure = {
	entity = "bts_shroud_portal_entity"
	construction_entity = "construction_platform_entity"
    portrait = "GFX_megastructure_bts_shroud_portal"
	show_galactic_map_icon = no
	show_in_outliner = no
    build_type = outside_gravity_well
	build_time = @bts_shroud_portal_time

	resources = {
		category = megastructures
		cost = {
			sr_zro = @bts_shroud_portal_sr_zro
			energy = @bts_shroud_portal_energy
		}
	}

    potential = {
        bts_has_labyrinth_of_abstraction_level = {
            LEVEL = @bts_labyrinth_of_abstraction_shroud_portal_level
        }
    }

    possible = {
        custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
        NOT = { has_megastructure = bts_shroud_portal_megastructure }
    }

	bypass_type = bts_shroud_portal
}