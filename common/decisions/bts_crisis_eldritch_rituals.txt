# decision_bts_shroud_rift_summon_1 = {
# 	sound = event_energy_field
# 	icon = decision_wormhole
#     owned_planets_only = no

# 	resources = {
# 		category = decisions
# 		cost = {
# 			# astral_threads = @decision_bts_zroni_astral_spliting_astral_threads_cost
#             # energy = 100
# 		}
# 	}

# 	potential = {
#         is_planet_class = pc_bts_shroud_rift
# 		exists = solar_system.owner
#         solar_system.owner = {
#             has_crisis_perk = bts_menp_mega_summon_1
#         }
# 	}

#     allow = {
#         custom_tooltip = {
#             fail_text = decision_bts_shroud_rift_summon_cooldown
#             solar_system.owner = {
#                 NOT = {
#                     has_modifier = shroud_cooldown
#                 }
#             }
#         }
#     }

# 	effect = {
#         custom_tooltip = decision_bts_shroud_rift_summon_1_effect
#         solar_system.owner = {
#             add_modifier = {
#                 modifier = "shroud_cooldown"
#                 days = @bts_power_summon_1_shroud_delve_cooldown
#                 time_multiplier = value:scripted_modifier_mult|MODIFIER|shroud_delve_cooldown|
#             }
#             hidden_effect = {
#                 country_event = { id = bts.310 }
#             }
#         }
# 	}
# }

bts_ritual_pop_trade = {
	sound = event_energy_field
	icon = decision_wormhole
    owned_planets_only = no

	resources = {
		category = decisions
		cost = {

		}
	}

	potential = {
        is_planet_class = pc_bts_shroud_rift
		exists = solar_system.owner
        solar_system.owner = {
            always = yes
        }
	}

    allow = {
        bts_crisis_ritual_can_use_cooldown = yes

        if = {
            limit = { 
                solar_system.owner = {
                    bts_can_use_councilor_ultimate_power = { COUNCILOR = bts_crisis_councilor_ritual } 
                }
            }
            bts_crisis_ritual_can_use_cost = {
                COST = @bts_ritual_pop_trade_custom_thrall_cost
            }
        }
        else = {
            bts_crisis_ritual_can_use_cost = {
                COST = @bts_ritual_pop_trade_thrall_cost
            }
        }

    }

	effect = {
        custom_tooltip = bts_ritual_pop_trade_effects

        hidden_effect = {
            solar_system.owner.capital_scope = {
                create_pop = {
                    species = owner_main_species
                }
            }
        }
        if = {
            limit = {
                solar_system.owner = {
                    bts_can_use_councilor_power = { COUNCILOR = bts_crisis_councilor_ritual }
                }
            }
            add_modifier = {
                modifier = bts_ritual_pop_trade_boost
                days = @bts_ritual_pop_trade_boost_duration
            }
        }

        if = {
            limit = { 
                solar_system.owner = {
                    bts_can_use_councilor_ultimate_power = { COUNCILOR = bts_crisis_councilor_ritual } 
                }
            }
            bts_crisis_ritual_setup = {
                COST = @bts_ritual_pop_trade_custom_thrall_cost
                COOLDOWN = @bts_ritual_pop_trade_cooldown
            }
        }
        else = {
            bts_crisis_ritual_setup = {
                COST = @bts_ritual_pop_trade_thrall_cost
                COOLDOWN = @bts_ritual_pop_trade_cooldown
            }
        }
	}
}

bts_ritual_remove_trait = {
	sound = event_energy_field
	icon = decision_wormhole
    owned_planets_only = no

	potential = {
        is_planet_class = pc_bts_shroud_rift
		exists = solar_system.owner
        solar_system.owner = {
            always = yes
        }
	}

    allow = {
        bts_crisis_ritual_can_use_cooldown = yes
        bts_crisis_ritual_can_use_cost = {
            COST = @bts_ritual_remove_trait_thrall_cost
        }
        solar_system = {
            owner = {
                any_owned_leader = {
                    num_leader_traits = {
                        value > 0
                        negative = yes
                    }
                }
            }
        }
    }

	effect = {
        custom_tooltip = bts_ritual_remove_trait_effects
        bts_crisis_ritual_setup = {
            COST = @bts_ritual_remove_trait_thrall_cost
            COOLDOWN = @bts_ritual_remove_trait_cooldown
        }

        hidden_effect = {
            solar_system.owner = {
                random_owned_leader = {
                    limit = {
                        num_leader_traits = {
                            value > 0
                            negative = yes
                        }
                    }
                    remove_trait = all_negative
                }
            }
        }

	}
}

bts_ritual_reset_leader = {
	sound = event_energy_field
	icon = decision_wormhole
    owned_planets_only = no

	potential = {
        is_planet_class = pc_bts_shroud_rift
		exists = solar_system.owner
        solar_system.owner = {
            always = yes
        }
	}

    allow = {
        bts_crisis_ritual_can_use_cooldown = yes
        bts_crisis_ritual_can_use_cost = {
            COST = @bts_ritual_reset_leader_thrall_cost
        }
        solar_system = {
            owner = {
                any_owned_leader = {
                    has_skill > 1
                }
            }
        }
    }

	effect = {
        custom_tooltip = bts_ritual_reset_leader_effects
        bts_crisis_ritual_setup = {
            COST = @bts_ritual_reset_leader_thrall_cost
            COOLDOWN = @bts_ritual_reset_leader_cooldown
        }

        hidden_effect = {
            solar_system.owner = {
                country_event = { id = bts.502 }
            }
        }

	}
}

# # Ritual: Umbral Trade
# country_event = {
# 	id = bts.510
# 	is_triggered_only = yes
# 	hide_window = yes
	
# 	immediate = {
# 		capital_scope = {
# 			create_pop = {
# 				species = owner_main_species
# 			}
# 		}
# 		if = {
# 			limit = {
# 				bts_can_use_councilor_power = { COUNCILOR = bts_crisis_councilor_ritual }
# 			}
# 			add_modifier = {
# 				modifier = bts_ritual_pop_trade_boost
# 				days = @bts_ritual_pop_trade_boost_duration
# 			}
# 		}
# 	}
# }


# inline_script = {
#     script = bts_crisis_ritual
#     NAME = bts_ritual_pop_trade
#     ICON = decision_wormhole
#     DESC = bts_ritual_pop_trade_effect
#     SHROUD_RIFT_EVENT = bts.510
#     COUNTRY_POTENTIAL = "always = yes"
#     THRALL_COST = @bts_ritual_pop_trade_thrall_cost
#     CUSTOM_COST_TRIGGER = "bts_can_use_councilor_ultimate_power = { COUNCILOR = bts_crisis_councilor_ritual }"
#     CUSTOM_THRALL_COST = @bts_ritual_pop_trade_custom_thrall_cost
#     COOLDOWN = @bts_ritual_pop_trade_cooldown
# }

# decision_bts_shroud_rift_summon_4 = {
# 	sound = event_energy_field
# 	icon = decision_wormhole
#     owned_planets_only = no

# 	resources = {
# 		category = decisions
# 		cost = {
# 			# astral_threads = @decision_bts_zroni_astral_spliting_astral_threads_cost
#             # energy = 100
# 		}
# 	}

# 	potential = {
#         is_planet_class = pc_bts_shroud_rift
# 		exists = solar_system.owner
#         solar_system.owner = {
#             has_crisis_perk = bts_menp_mega_summon_4
#         }
# 	}

#     allow = {
#         custom_tooltip = {
#             fail_text = decision_bts_shroud_rift_summon_cooldown
#             solar_system.owner = {
#                 NOT = {
#                     has_modifier = shroud_cooldown
#                 }
#             }
#         }
#         custom_tooltip = { 
#             fail_text = decision_bts_shroud_rift_summon_4_invalid_number 
#             count_owned_ship = { 
#                 count < @bts_power_summon_4_max_number 
#                 limit = { is_ship_size = warped_consciousness } 
#             } 
#         }
#     }

# 	effect = {
#         custom_tooltip = decision_bts_shroud_rift_summon_4_effect
#         solar_system.owner = {
#             add_modifier = {
#                 modifier = "shroud_cooldown"
#                 days = @bts_power_summon_4_shroud_delve_cooldown
#                 time_multiplier = value:scripted_modifier_mult|MODIFIER|shroud_delve_cooldown|
#             }
#             hidden_effect = {
#                 country_event = { id = bts.340 }
#             }
#         }
# 	}
# }
